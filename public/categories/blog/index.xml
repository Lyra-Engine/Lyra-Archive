<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Lyra Engine</title>
    <link>http://localhost:1313/categories/blog/</link>
    <description>Recent content in Blog on Lyra Engine</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Jul 2025 10:00:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RHI: Vulkan</title>
      <link>http://localhost:1313/posts/rhi-vulkan/</link>
      <pubDate>Thu, 10 Jul 2025 10:00:00 -0500</pubDate>
      <guid>http://localhost:1313/posts/rhi-vulkan/</guid>
      <description></description>
    </item>
    <item>
      <title>RHI Overview</title>
      <link>http://localhost:1313/posts/rhi-overview/</link>
      <pubDate>Tue, 24 Jun 2025 10:00:00 -0500</pubDate>
      <guid>http://localhost:1313/posts/rhi-overview/</guid>
      <description>&lt;h2 id=&#34;webgpu-api&#34;&gt;WebGPU API&lt;/h2&gt;&#xA;&lt;p&gt;As the previous post has mentioned, I have chosen to use&#xA;&lt;a href=&#34;https://www.w3.org/TR/webgpu/&#34;&gt;WebGPU&lt;/a&gt; API as the foundation for my RHI&#xA;abstraction layer. In this post, I will talk about the deviations from this&#xA;foundation API.&lt;/p&gt;&#xA;&lt;h2 id=&#34;explicit-lifetime-management&#34;&gt;Explicit Lifetime Management&lt;/h2&gt;&#xA;&lt;p&gt;WebGPU automatically tracks the lifetime of all GPU objects. This is one of the key&#xA;points WebGPU is simpler to use. It is similar to Metal 1.0 in a way. However, the&#xA;trend of modern rendering is that graphics API reduces overhead by asking users to&#xA;manage their own stuff. Therefore I choose to let users create/destroy GPU objects&#xA;manually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lyra Engine Overview</title>
      <link>http://localhost:1313/posts/lyra-engine-overview/</link>
      <pubDate>Fri, 20 Jun 2025 10:00:00 -0500</pubDate>
      <guid>http://localhost:1313/posts/lyra-engine-overview/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Lyra-Engine&lt;/strong&gt; is my attempt to create a rendering engine.&lt;/p&gt;&#xA;&lt;p&gt;I have always been fond of creating a complete game / rendering engine from scratch.&#xA;In the past, I have made multiple attempts but none of them got very far due to the&#xA;lack of experience. &lt;strong&gt;Lyra-Engine&lt;/strong&gt; is currently my most promising project.&#xA;&lt;strong&gt;Lyra-Engine&lt;/strong&gt; uses a modular design, similar to &lt;strong&gt;TheMachinery&lt;/strong&gt;, except that&#xA;&lt;strong&gt;Lyra-Engine&lt;/strong&gt; chooses to use C++, and does not strictly follow C ABI (as it only&#xA;introduces more trouble for me at the current stage).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
